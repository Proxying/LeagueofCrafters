package leagueofcrafters.client.models;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelKogmaw extends ModelBase {
	ModelRenderer head;
	ModelRenderer body1;
	ModelRenderer rightspike1;
	ModelRenderer leftspike1;
	ModelRenderer leftarm1;
	ModelRenderer leftleg1;
	ModelRenderer body2;
	ModelRenderer section2;
	ModelRenderer rightarm1;
	ModelRenderer tail1;
	ModelRenderer mouth;
	ModelRenderer tail2;
	ModelRenderer leftspike2;
	ModelRenderer rightspike2;
	ModelRenderer section1;
	ModelRenderer rightleg1;
	ModelRenderer rightarm2;
	ModelRenderer leftarm2;
	ModelRenderer rightleg2;
	ModelRenderer leftleg2;
	ModelRenderer leftfinger1;
	ModelRenderer rightfinger1;
	ModelRenderer leftheel;
	ModelRenderer rightheel;
	ModelRenderer leftfinger2;
	ModelRenderer leftfinger3;
	ModelRenderer rightfinger3;
	ModelRenderer rightfinger2;
	ModelRenderer rightclaw1;
	ModelRenderer rightclaw2;
	ModelRenderer leftclaw1;
	ModelRenderer leftclaw2;
	ModelRenderer FullLeft;
	ModelRenderer FullRight;

	public ModelKogmaw() {
		textureWidth = 128;
		textureHeight = 64;

		head = new ModelRenderer(this, 71, 0);
		head.addBox(-8F, -4F, -8F, 14, 10, 13);
		head.setRotationPoint(0F, 0F, 0F);
		head.setTextureSize(128, 64);
		head.mirror = true;
		setRotation(head, 0F, 0F, 0F);
		body1 = new ModelRenderer(this, 71, 24);
		body1.addBox(-8F, 0F, 0F, 14, 12, 13);
		body1.setRotationPoint(0F, 0F, 0F);
		body1.setTextureSize(128, 64);
		body1.mirror = true;
		setRotation(body1, 0F, 0F, 0F);
		rightspike1 = new ModelRenderer(this, 61, 0);
		rightspike1.addBox(-8F, -12F, -3F, 2, 10, 3);
		rightspike1.setRotationPoint(0F, 0F, 0F);
		rightspike1.setTextureSize(128, 64);
		rightspike1.mirror = true;
		setRotation(rightspike1, -0.6632251F, 0F, -0.3141593F);
		leftspike1 = new ModelRenderer(this, 61, 0);
		leftspike1.addBox(4F, -11F, -3F, 2, 10, 3);
		leftspike1.setRotationPoint(0F, 0F, 0F);
		leftspike1.setTextureSize(128, 64);
		leftspike1.mirror = true;
		setRotation(leftspike1, -0.6632251F, 0F, 0.3141593F);
		leftarm1 = new ModelRenderer(this, 27, 16);
		leftarm1.addBox(1F, 5F, 4F, 2, 8, 3);
		leftarm1.setRotationPoint(5F, 2F, 0F);
		leftarm1.setTextureSize(128, 64);
		leftarm1.mirror = true;
		setRotation(leftarm1, 0F, 0F, 0F);
		body2 = new ModelRenderer(this, 0, 41);
		body2.addBox(-7F, 3F, 6F, 12, 12, 11);
		body2.setRotationPoint(0F, 0F, 0F);
		body2.setTextureSize(128, 64);
		body2.mirror = true;
		setRotation(body2, 0F, 0F, 0F);
		section2 = new ModelRenderer(this, 5, 44);
		section2.addBox(-6F, 5F, 13F, 10, 10, 8);
		section2.setRotationPoint(0F, 0F, 0F);
		section2.setTextureSize(128, 64);
		section2.mirror = true;
		setRotation(section2, 0F, 0F, 0F);
		rightarm1 = new ModelRenderer(this, 16, 16);
		rightarm1.addBox(-10F, 7F, 4F, 2, 8, 3);
		rightarm1.setRotationPoint(0F, 0F, 0F);
		rightarm1.setTextureSize(128, 64);
		rightarm1.mirror = true;
		setRotation(rightarm1, 0F, 0F, 0F);
		tail1 = new ModelRenderer(this, 51, 49);
		tail1.addBox(-5F, 8F, 20F, 8, 6, 9);
		tail1.setRotationPoint(0F, 0F, 0F);
		tail1.setTextureSize(128, 64);
		tail1.mirror = true;
		setRotation(tail1, 0F, 0F, 0F);
		mouth = new ModelRenderer(this, 0, 28);
		mouth.addBox(-7F, 6F, -7F, 12, 6, 7);
		mouth.setRotationPoint(0F, 0F, 0F);
		mouth.setTextureSize(128, 64);
		mouth.mirror = true;
		setRotation(mouth, 0F, 0F, 0F);
		tail2 = new ModelRenderer(this, 0, 0);
		tail2.addBox(-4F, 9F, 24F, 6, 4, 8);
		tail2.setRotationPoint(0F, 0F, 0F);
		tail2.setTextureSize(128, 64);
		tail2.mirror = true;
		setRotation(tail2, 0F, 0F, 0F);
		leftspike2 = new ModelRenderer(this, 61, 0);
		leftspike2.addBox(1F, -15F, -4F, 2, 13, 3);
		leftspike2.setRotationPoint(0F, 0F, 0F);
		leftspike2.setTextureSize(128, 64);
		leftspike2.mirror = true;
		setRotation(leftspike2, -0.6632251F, 0F, 0F);
		rightspike2 = new ModelRenderer(this, 61, 0);
		rightspike2.addBox(-5F, -15F, -4F, 2, 13, 3);
		rightspike2.setRotationPoint(0F, 0F, 0F);
		rightspike2.setTextureSize(128, 64);
		rightspike2.mirror = true;
		setRotation(rightspike2, -0.6632251F, 0F, 0F);
		section1 = new ModelRenderer(this, 87, 50);
		section1.addBox(-7F, -3F, 4F, 12, 6, 7);
		section1.setRotationPoint(0F, 0F, 0F);
		section1.setTextureSize(128, 64);
		section1.mirror = true;
		setRotation(section1, 0F, 0F, 0F);
		rightarm2 = new ModelRenderer(this, 29, 0);
		rightarm2.addBox(-10F, 11F, -1F, 2, 4, 5);
		rightarm2.setRotationPoint(0F, 0F, 0F);
		rightarm2.setTextureSize(128, 64);
		rightarm2.mirror = true;
		setRotation(rightarm2, 0F, 0F, 0F);
		leftarm2 = new ModelRenderer(this, 29, 0);
		leftarm2.addBox(6F, 11F, -1F, 2, 4, 5);
		leftarm2.setRotationPoint(0F, 0F, 0F);
		leftarm2.setTextureSize(128, 64);
		leftarm2.mirror = true;
		setRotation(leftarm2, 0F, 0F, 0F);

		rightclaw1 = new ModelRenderer(this, 57, 29);
		rightclaw1.addBox(-11F, 14F, -3F, 2, 2, 5);
		rightclaw1.setRotationPoint(0F, 0F, 0F);
		rightclaw1.setTextureSize(128, 64);
		rightclaw1.mirror = true;
		setRotation(rightclaw1, 0F, 0F, 0F);
		rightclaw2 = new ModelRenderer(this, 57, 29);
		rightclaw2.addBox(-11F, 11F, -4F, 2, 2, 5);
		rightclaw2.setRotationPoint(0F, 0F, 0F);
		rightclaw2.setTextureSize(128, 64);
		rightclaw2.mirror = true;
		setRotation(rightclaw2, 0F, 0F, 0F);
		leftclaw1 = new ModelRenderer(this, 57, 29);
		leftclaw1.addBox(7F, 14F, -3F, 2, 2, 5);
		leftclaw1.setRotationPoint(0F, 0F, 0F);
		leftclaw1.setTextureSize(128, 64);
		leftclaw1.mirror = true;
		setRotation(leftclaw1, 0F, 0F, 0F);
		leftclaw2 = new ModelRenderer(this, 57, 29);
		leftclaw2.addBox(7F, 11F, -4F, 2, 2, 5);
		leftclaw2.setRotationPoint(0F, 0F, 0F);
		leftclaw2.setTextureSize(128, 64);
		leftclaw2.mirror = true;
		setRotation(leftclaw2, 0F, 0F, 0F);

		FullLeft = new ModelRenderer(this, "Full Left");
		leftleg2 = new ModelRenderer(this, 47, 36);
		leftleg2.addBox(2F, 17F, 9F, 6, 7, 6);
		leftleg2.setRotationPoint(0F, 0F, 0F);
		leftleg2.setTextureSize(128, 64);
		leftleg2.mirror = true;
		setRotation(leftleg2, 0F, 0F, 0F);
		leftfinger1 = new ModelRenderer(this, 43, 0);
		leftfinger1.addBox(3.5F, 21F, 3F, 3, 3, 6);
		leftfinger1.setRotationPoint(0F, 0F, 0F);
		leftfinger1.setTextureSize(128, 64);
		leftfinger1.mirror = true;
		setRotation(leftfinger1, 0F, 0F, 0F);
		leftheel = new ModelRenderer(this, 29, 10);
		leftheel.addBox(3F, 21F, 15F, 4, 3, 3);
		leftheel.setRotationPoint(0F, 0F, 0F);
		leftheel.setTextureSize(128, 64);
		leftheel.mirror = true;
		setRotation(leftheel, 0F, 0F, 0F);
		leftfinger2 = new ModelRenderer(this, 53, 19);
		leftfinger2.addBox(0F, 21F, 4F, 3, 3, 6);
		leftfinger2.setRotationPoint(0F, 0F, 0F);
		leftfinger2.setTextureSize(128, 64);
		leftfinger2.mirror = true;
		setRotation(leftfinger2, 0F, 0F, 0F);
		leftfinger3 = new ModelRenderer(this, 53, 19);
		leftfinger3.addBox(7F, 21F, 4F, 3, 3, 6);
		leftfinger3.setRotationPoint(0F, 0F, 0F);
		leftfinger3.setTextureSize(128, 64);
		leftfinger3.mirror = true;
		setRotation(leftfinger3, 0F, 0F, 0F);
		leftleg1 = new ModelRenderer(this, 0, 16);
		leftleg1.addBox(1F, -1F, 10F, 4, 8, 4);
		leftleg1.setRotationPoint(2F, 12F, 0F);
		leftleg1.setTextureSize(128, 64);
		leftleg1.mirror = true;
		setRotation(leftleg1, 0F, 0F, 0F);
		FullLeft.addChild(leftleg1);
		FullLeft.addChild(leftleg2);
		FullLeft.addChild(leftfinger1);
		FullLeft.addChild(leftfinger2);
		FullLeft.addChild(leftfinger3);
		FullLeft.addChild(leftheel);

		FullRight = new ModelRenderer(this, "Full Left");
		rightheel = new ModelRenderer(this, 29, 10);
		rightheel.addBox(-9F, 21F, 15F, 4, 3, 3);
		rightheel.setRotationPoint(0F, 0F, 0F);
		rightheel.setTextureSize(128, 64);
		rightheel.mirror = true;
		setRotation(rightheel, 0F, 0F, 0F);
		rightfinger3 = new ModelRenderer(this, 53, 19);
		rightfinger3.addBox(-5F, 21F, 4F, 3, 3, 6);
		rightfinger3.setRotationPoint(0F, 0F, 0F);
		rightfinger3.setTextureSize(128, 64);
		rightfinger3.mirror = true;
		setRotation(rightfinger3, 0F, 0F, 0F);
		rightfinger2 = new ModelRenderer(this, 53, 19);
		rightfinger2.addBox(-12F, 21F, 4F, 3, 3, 6);
		rightfinger2.setRotationPoint(0F, 0F, 0F);
		rightfinger2.setTextureSize(128, 64);
		rightfinger2.mirror = true;
		setRotation(rightfinger2, 0F, 0F, 0F);
		rightleg1 = new ModelRenderer(this, 0, 16);
		rightleg1.addBox(-9F, 11F, 10F, 4, 8, 4);
		rightleg1.setRotationPoint(0F, 0F, 0F);
		rightleg1.setTextureSize(128, 64);
		rightleg1.mirror = true;
		setRotation(rightleg1, 0F, 0F, 0F);
		rightfinger1 = new ModelRenderer(this, 43, 0);
		rightfinger1.addBox(-8.5F, 21F, 3F, 3, 3, 6);
		rightfinger1.setRotationPoint(0F, 0F, 0F);
		rightfinger1.setTextureSize(128, 64);
		rightfinger1.mirror = true;
		setRotation(rightfinger1, 0F, 0F, 0F);
		rightleg2 = new ModelRenderer(this, 47, 36);
		rightleg2.addBox(-10F, 17F, 9F, 6, 7, 6);
		rightleg2.setRotationPoint(0F, 0F, 0F);
		rightleg2.setTextureSize(128, 64);
		rightleg2.mirror = true;
		setRotation(rightleg2, 0F, 0F, 0F);
		FullRight.addChild(rightleg1);
		FullRight.addChild(rightleg2);
		FullRight.addChild(rightfinger1);
		FullRight.addChild(rightfinger2);
		FullRight.addChild(rightfinger3);
		FullRight.addChild(rightheel);

	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		head.render(f5);
		body1.render(f5);
		rightspike1.render(f5);
		leftspike1.render(f5);
		leftarm1.render(f5);
		body2.render(f5);
		section2.render(f5);
		rightarm1.render(f5);
		tail1.render(f5);
		mouth.render(f5);
		tail2.render(f5);
		leftspike2.render(f5);
		rightspike2.render(f5);
		section1.render(f5);
		rightarm2.render(f5);
		leftarm2.render(f5);
		leftheel.render(f5);
		rightclaw1.render(f5);
		rightclaw2.render(f5);
		leftclaw1.render(f5);
		leftclaw2.render(f5);
		FullRight.render(f5);
		FullLeft.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		this.FullLeft.rotateAngleX = MathHelper.cos(f * 0.6662F) * .3F * f1 * 0.5F;
		this.FullLeft.rotateAngleY = 0.0f;

		this.FullRight.rotateAngleX = MathHelper.cos(f * 0.6662F + (float) Math.PI) * .3F * f1;
		this.FullRight.rotateAngleY = 0.0F;

	}

}
